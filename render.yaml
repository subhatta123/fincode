services:
  - type: web
    name: tableau-data-reporter
    env: python
    region: ohio
    buildCommand: |
      pip install -r requirements.txt
      mkdir -p frontend/build
      if [ ! -f frontend/build/index.html ]; then
        echo "Creating fallback index.html"
        cat > frontend/build/index.html << 'EOL'
        <!DOCTYPE html>
        <html>
        <head>
            <title>Fincode API Server</title>
            <style>
                body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
                h1 { color: #333; }
                .status { padding: 15px; background-color: #f0f8ff; border-radius: 5px; }
                .nav { margin-top: 20px; }
                .nav a { display: inline-block; margin-right: 15px; padding: 8px 15px; background: #0d6efd; color: white; text-decoration: none; border-radius: 4px; }
            </style>
        </head>
        <body>
            <h1>Fincode API Server</h1>
            <div class="status">
                <p>API server is running successfully.</p>
                <p>This is a temporary frontend page. Use the links below to access different parts of the application.</p>
            </div>
            <div class="nav">
                <a href="/login">Login</a>
                <a href="/register">Register</a>
            </div>
        </body>
        </html>
        EOL
      fi
      # Ensure permissions are set correctly
      chmod -R 755 frontend/build
      ls -la frontend/build
    startCommand: gunicorn wsgi:app --bind 0.0.0.0:$PORT --workers 1 --threads 8 --timeout 180
    envVars:
      - key: PYTHON_VERSION
        value: 3.9.0
      - key: SMTP_SERVER
        sync: false
      - key: SMTP_PORT
        sync: false
      - key: SENDER_EMAIL
        sync: false
      - key: SENDER_PASSWORD
        sync: false
      - key: TWILIO_ACCOUNT_SID
        sync: false
      - key: TWILIO_AUTH_TOKEN
        sync: false
      - key: TWILIO_WHATSAPP_NUMBER
        sync: false
      - key: BASE_URL
        sync: false
      - key: SECRET_KEY
        generateValue: true
      - key: FLASK_APP
        value: wsgi.py
      - key: FLASK_ENV
        value: production
      - key: RENDER
        value: true
      - key: RENDER_EXTERNAL_URL
        fromService:
          type: web
          name: tableau-data-reporter
          property: url
    disk:
      name: data
      mountPath: /opt/render/project/src/data
      sizeGB: 1 